{"ast":null,"code":"var _jsxFileName = \"/Users/yashwagle/memegenerator/src/Components/InputArea.js\";\nimport React from \"react\";\n\nclass InputBox {\n  constructor(X, Y) {\n    this.X = X;\n    this.Y = Y;\n  }\n\n}\n\nclass InputArea extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      memeImages: [],\n      randomImage: \"https://i.imgflip.com/30b1gx.jpg\",\n      counter: 1,\n      inputBoxID: 0,\n      inputBoxes: []\n    };\n    this.changeImage = this.changeImage.bind(this);\n    this.addTextBox = this.addTextBox.bind(this);\n    this.dragOverImage = this.dragOverImage.bind(this);\n    this.getInputBox = this.getInputBox.bind(this);\n  }\n\n  changeImage() {\n    console.log(\"Clicked\");\n    this.setState(currentState => {\n      return {\n        counter: currentState.counter + 1,\n        randomImage: currentState.memeImages[currentState.counter].url\n      };\n    });\n  }\n\n  componentWillMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        data\n      } = response;\n      this.setState({\n        memeImages: data.memes\n      });\n    });\n  }\n\n  addTextBox() {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: \"Top Text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    });\n  }\n\n  dragOverImage(event) {\n    const box = {\n      left: event.X,\n      top: event.Y\n    };\n    this.setState(currentState => {\n      currentState.inputBoxes.append( /*#__PURE__*/React.createElement(\"input\", {\n        className: \"inputBox\",\n        type: \"text\",\n        placeholder: \"Drag me\",\n        draggable: true,\n        onDragStart: e => {\n          this.dragStart(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 38\n        }\n      }));\n    });\n  }\n\n  dragStart(event) {\n    console.log(\"Drag Start\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputBoxContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      key: this.state.inputBoxID,\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: \"Drag me\",\n      draggable: true,\n      onDragStart: e => {\n        this.dragStart(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"generateButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Gen\")), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"memeImage\",\n      src: this.state.randomImage,\n      onDrop: this.dragOverImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.changeImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \" Next Image\"), this.state.inputBoxes);\n  }\n\n}\n\nexport default InputArea;","map":{"version":3,"sources":["/Users/yashwagle/memegenerator/src/Components/InputArea.js"],"names":["React","InputBox","constructor","X","Y","InputArea","Component","state","memeImages","randomImage","counter","inputBoxID","inputBoxes","changeImage","bind","addTextBox","dragOverImage","getInputBox","console","log","setState","currentState","url","componentWillMount","fetch","then","response","json","data","memes","event","box","left","top","append","e","dragStart","render"],"mappings":"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","sourcesContent":["import React from \"react\"\n\n\nclass InputBox{\n    constructor(X, Y){\n      this.X = X\n      this.Y = Y\n    }\n}\n\n\nclass InputArea extends React.Component{\n\n  constructor(){\n    super()\n    this.state={\n      memeImages:[],\n      randomImage:\"https://i.imgflip.com/30b1gx.jpg\",\n      counter:1,\n      inputBoxID:0,\n      inputBoxes:[]\n    }\n    this.changeImage = this.changeImage.bind(this)\n    this.addTextBox = this.addTextBox.bind(this)\n    this.dragOverImage = this.dragOverImage.bind(this)\n    this.getInputBox = this.getInputBox.bind(this)\n\n\n\n\n  }\n\n   changeImage(){\n     console.log(\"Clicked\");\n    this.setState(currentState=>{\n      return{\n      counter:currentState.counter + 1,\n      randomImage:currentState.memeImages[currentState.counter].url\n    }\n    }\n  )\n  }\n\n\n\n  componentWillMount(){\n    fetch(\"https://api.imgflip.com/get_memes\")\n    .then(response => response.json())\n    .then(response=>{\n      const {data} = response\n      this.setState({\n        memeImages:data.memes\n      })\n    })\n  }\n\n  addTextBox(){\n    return(\n      <input className=\"inputBox\" type=\"text\" placeholder=\"Top Text\" />\n    )\n  }\n\n  dragOverImage(event){\n    const box = {\n    left: event.X,\n    top: event.Y\n    }\n    this.setState((currentState)=>{\n      currentState.inputBoxes.append(<input className=\"inputBox\" type=\"text\" placeholder=\"Drag me\" draggable onDragStart={(e)=>{this.dragStart(e)}} />)\n    })\n\n  }\n\n\n\n  dragStart(event){\n    console.log(\"Drag Start\");\n  }\n\n  render(){\n      return(\n        <div>\n        <div className=\"inputBoxContainer\">\n        <input key={this.state.inputBoxID} className=\"inputBox\" type=\"text\" placeholder=\"Drag me\" draggable onDragStart={(e)=>{this.dragStart(e)}}  />\n        <button className=\"generateButton\">Gen</button>\n        </div>\n        <img className=\"memeImage\" src={this.state.randomImage} onDrop={this.dragOverImage}/>\n        <button onClick={this.changeImage}> Next Image</button>\n        {this.state.inputBoxes}\n\n\n        </div>\n      )\n  }\n}\n\nexport default InputArea\n"]},"metadata":{},"sourceType":"module"}