{"ast":null,"code":"var _jsxFileName = \"/Users/yashwagle/memegenerator/src/Components/InputArea.js\";\nimport React from \"react\";\n\nclass InputBox {\n  constructor(X, Y) {\n    this.X = X;\n    this.Y = Y;\n  }\n\n}\n\nclass InputArea extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      memeImages: [],\n      randomImage: \"https://i.imgflip.com/30b1gx.jpg\",\n      counter: 1,\n      inputBoxID: 0,\n      inputBoxes: [],\n      fontSize: 12\n    };\n    this.changeImage = this.changeImage.bind(this);\n    this.addTextBox = this.addTextBox.bind(this);\n    this.dragOverImage = this.dragOverImage.bind(this);\n    this.dropImage = this.dropImage.bind(this);\n    this.fontSizeChange = this.fontSizeChange.bind(this);\n  }\n\n  changeImage() {\n    console.log(\"Clicked\");\n    this.setState(currentState => {\n      return {\n        counter: currentState.counter + 1,\n        randomImage: currentState.memeImages[currentState.counter].url\n      };\n    });\n  }\n\n  componentWillMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        data\n      } = response;\n      this.setState({\n        memeImages: data.memes\n      });\n    });\n  }\n\n  addTextBox() {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: \"Top Text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    });\n  }\n\n  dropImage(event) {\n    const id = event.dataTransfer.getData(\"id\");\n    console.log(id);\n    const boxStyle = {\n      position: \"absolute\",\n      left: event.clientX,\n      top: event.clientY,\n      fontSize: this.state.fontSize\n    };\n\n    if (id == -1) {\n      console.log(id);\n      event.preventDefault();\n      const box = {\n        boxID: this.state.inputBoxID,\n        style: boxStyle\n      };\n      this.setState(function (state) {\n        return {\n          inputBoxes: state.inputBoxes.concat(box),\n          inputBoxID: state.inputBoxID + 1\n        };\n      });\n    } else {\n      const index = this.state.inputBoxes.findIndex(element => element.boxID == id);\n      let newBoxArray = [...this.state.inputBoxes];\n      newBoxArray[index].style = boxStyle;\n      this.setState(function (state) {\n        return {\n          inputBoxes: newBoxArray\n        };\n      });\n    }\n  }\n\n  dragOverImage(event) {\n    event.preventDefault();\n  }\n\n  dragStart(event, id) {\n    event.dataTransfer.setData(\"id\", id);\n  }\n\n  fontSizeChange(event) {\n    console.log(event.target.value);\n    this.setState(function (state) {\n      return {\n        fontSize: event.target.value\n      };\n    });\n  }\n\n  render() {\n    console.log(this.state.inputBoxes);\n    const inputboxes = this.state.inputBoxes.map(item => {\n      const styleClass = {\n        position: item.style.position,\n        left: item.style.left,\n        top: item.style.right,\n        fontSize: this.state.fontSize\n      };\n      return /*#__PURE__*/React.createElement(\"input\", {\n        key: item.BoxID,\n        className: \"memeInputBox\",\n        style: item.style,\n        type: \"text\",\n        placeholder: \"Drag me\",\n        draggable: true,\n        onDragStart: e => {\n          this.dragStart(e, item.boxID);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputBoxContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: \"Drag me\",\n      draggable: true,\n      onDragStart: e => {\n        this.dragStart(e, -1);\n      },\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"generateButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, \"Gen\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"fontSizeInputBox\",\n      list: \"fontSize\",\n      name: \"fontSize\",\n      type: \"number\",\n      onChange: this.fontSizeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"fontSize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"14\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"18\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"28\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"32\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"memeImage\",\n      src: this.state.randomImage,\n      onDragOver: this.dragOverImage,\n      onDrop: this.dropImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.changeImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, \" Next Image\"), inputboxes);\n  }\n\n}\n\nexport default InputArea;","map":{"version":3,"sources":["/Users/yashwagle/memegenerator/src/Components/InputArea.js"],"names":["React","InputBox","constructor","X","Y","InputArea","Component","state","memeImages","randomImage","counter","inputBoxID","inputBoxes","fontSize","changeImage","bind","addTextBox","dragOverImage","dropImage","fontSizeChange","console","log","setState","currentState","url","componentWillMount","fetch","then","response","json","data","memes","event","id","dataTransfer","getData","boxStyle","position","left","clientX","top","clientY","preventDefault","box","boxID","style","concat","index","findIndex","element","newBoxArray","dragStart","setData","target","value","render","inputboxes","map","item","styleClass","right","BoxID","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,QAAN,CAAc;AACVC,EAAAA,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAM;AACf,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACD;;AAJS;;AAQd,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAuC;AAErCJ,EAAAA,WAAW,GAAE;AACX;AACA,SAAKK,KAAL,GAAW;AACTC,MAAAA,UAAU,EAAC,EADF;AAETC,MAAAA,WAAW,EAAC,kCAFH;AAGTC,MAAAA,OAAO,EAAC,CAHC;AAITC,MAAAA,UAAU,EAAC,CAJF;AAKTC,MAAAA,UAAU,EAAC,EALF;AAMTC,MAAAA,QAAQ,EAAC;AANA,KAAX;AAQA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKG,SAAL,GAAiB,KAAKA,SAAL,CAAeH,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;AAKD;;AAEAD,EAAAA,WAAW,GAAE;AACXM,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,SAAKC,QAAL,CAAcC,YAAY,IAAE;AAC1B,aAAM;AACNb,QAAAA,OAAO,EAACa,YAAY,CAACb,OAAb,GAAuB,CADzB;AAEND,QAAAA,WAAW,EAACc,YAAY,CAACf,UAAb,CAAwBe,YAAY,CAACb,OAArC,EAA8Cc;AAFpD,OAAN;AAID,KALD;AAOD;;AAIDC,EAAAA,kBAAkB,GAAE;AAClBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAE;AACd,YAAM;AAACE,QAAAA;AAAD,UAASF,QAAf;AACA,WAAKN,QAAL,CAAc;AACZd,QAAAA,UAAU,EAACsB,IAAI,CAACC;AADJ,OAAd;AAGD,KAPD;AAQD;;AAEDf,EAAAA,UAAU,GAAE;AACV,wBACE;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,WAAW,EAAC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAEDE,EAAAA,SAAS,CAACc,KAAD,EAAO;AACd,UAAMC,EAAE,GAAED,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2B,IAA3B,CAAV;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYY,EAAZ;AACA,UAAMG,QAAQ,GAAG;AACjBC,MAAAA,QAAQ,EAAC,UADQ;AAEjBC,MAAAA,IAAI,EAAEN,KAAK,CAACO,OAFK;AAGjBC,MAAAA,GAAG,EAAER,KAAK,CAACS,OAHM;AAIjB5B,MAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM;AAJJ,KAAjB;;AAMA,QAAGoB,EAAE,IAAE,CAAC,CAAR,EAAU;AACRb,MAAAA,OAAO,CAACC,GAAR,CAAYY,EAAZ;AACAD,MAAAA,KAAK,CAACU,cAAN;AACA,YAAMC,GAAG,GAAC;AACRC,QAAAA,KAAK,EAAC,KAAKrC,KAAL,CAAWI,UADT;AAERkC,QAAAA,KAAK,EAACT;AAFE,OAAV;AAIA,WAAKd,QAAL,CAAc,UAASf,KAAT,EAAe;AAC5B,eAAO;AACLK,UAAAA,UAAU,EAAEL,KAAK,CAACK,UAAN,CAAiBkC,MAAjB,CAAwBH,GAAxB,CADP;AAELhC,UAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,GAAmB;AAF1B,SAAP;AAIF,OALC;AAOH,KAdC,MAeE;AACF,YAAMoC,KAAK,GAAG,KAAKxC,KAAL,CAAWK,UAAX,CAAsBoC,SAAtB,CAAgCC,OAAO,IAAEA,OAAO,CAACL,KAAR,IAAeX,EAAxD,CAAd;AACA,UAAIiB,WAAW,GAAG,CAAC,GAAG,KAAK3C,KAAL,CAAWK,UAAf,CAAlB;AACAsC,MAAAA,WAAW,CAACH,KAAD,CAAX,CAAmBF,KAAnB,GAA2BT,QAA3B;AACA,WAAKd,QAAL,CAAc,UAASf,KAAT,EAAe;AAC5B,eAAO;AACLK,UAAAA,UAAU,EAAEsC;AADP,SAAP;AAGF,OAJC;AAKD;AACF;;AAECjC,EAAAA,aAAa,CAACe,KAAD,EAAO;AAClBA,IAAAA,KAAK,CAACU,cAAN;AACD;;AAGDS,EAAAA,SAAS,CAACnB,KAAD,EAAOC,EAAP,EAAU;AACjBD,IAAAA,KAAK,CAACE,YAAN,CAAmBkB,OAAnB,CAA2B,IAA3B,EAAgCnB,EAAhC;AACD;;AAEDd,EAAAA,cAAc,CAACa,KAAD,EAAO;AACnBZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAK,CAACqB,MAAN,CAAaC,KAAzB;AACA,SAAKhC,QAAL,CAAc,UAASf,KAAT,EAAe;AAC3B,aAAM;AACJM,QAAAA,QAAQ,EAACmB,KAAK,CAACqB,MAAN,CAAaC;AADlB,OAAN;AAGD,KAJD;AAKD;;AAIDC,EAAAA,MAAM,GAAE;AACNnC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWK,UAAvB;AACA,UAAM4C,UAAU,GAAC,KAAKjD,KAAL,CAAWK,UAAX,CAAsB6C,GAAtB,CAA2BC,IAAD,IAAQ;AACjD,YAAMC,UAAU,GAAC;AACftB,QAAAA,QAAQ,EAACqB,IAAI,CAACb,KAAL,CAAWR,QADL;AAEfC,QAAAA,IAAI,EAAEoB,IAAI,CAACb,KAAL,CAAWP,IAFF;AAGfE,QAAAA,GAAG,EAAEkB,IAAI,CAACb,KAAL,CAAWe,KAHD;AAIf/C,QAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM;AAJN,OAAjB;AAMA,0BAAO;AAAO,QAAA,GAAG,EAAE6C,IAAI,CAACG,KAAjB;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAiD,QAAA,KAAK,EAAEH,IAAI,CAACb,KAA7D;AAAoE,QAAA,IAAI,EAAC,MAAzE;AAAgF,QAAA,WAAW,EAAC,SAA5F;AAAsG,QAAA,SAAS,MAA/G;AAAgH,QAAA,WAAW,EAAGiB,CAAD,IAAK;AAAC,eAAKX,SAAL,CAAeW,CAAf,EAAiBJ,IAAI,CAACd,KAAtB;AAA6B,SAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KARgB,CAAjB;AAUE,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,WAAW,EAAC,SAApD;AAA8D,MAAA,SAAS,MAAvE;AAAwE,MAAA,WAAW,EAAGkB,CAAD,IAAK;AAAC,aAAKX,SAAL,CAAeW,CAAf,EAAiB,CAAC,CAAlB;AAAqB,OAAhH;AAAkH,MAAA,QAAQ,MAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,eAGF;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,IAAI,EAAC,UAAzC;AAAoD,MAAA,IAAI,EAAC,UAAzD;AAAoE,MAAA,IAAI,EAAC,QAAzE;AAAkF,MAAA,QAAQ,EAAE,KAAK3C,cAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHE,eAIF;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,eAKA;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,eAMA;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CAJE,CADA,eAcA;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWE,WAA3C;AAAwD,MAAA,UAAU,EAAE,KAAKQ,aAAzE;AAAwF,MAAA,MAAM,EAAE,KAAKC,SAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,eAeA;AAAQ,MAAA,OAAO,EAAE,KAAKJ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfA,EAgBC0C,UAhBD,CADF;AAoBH;;AA7IoC;;AAgJvC,eAAenD,SAAf","sourcesContent":["import React from \"react\"\n\n\nclass InputBox{\n    constructor(X, Y){\n      this.X = X\n      this.Y = Y\n    }\n}\n\n\nclass InputArea extends React.Component{\n\n  constructor(){\n    super()\n    this.state={\n      memeImages:[],\n      randomImage:\"https://i.imgflip.com/30b1gx.jpg\",\n      counter:1,\n      inputBoxID:0,\n      inputBoxes:[],\n      fontSize:12\n    }\n    this.changeImage = this.changeImage.bind(this)\n    this.addTextBox = this.addTextBox.bind(this)\n    this.dragOverImage = this.dragOverImage.bind(this)\n    this.dropImage = this.dropImage.bind(this)\n    this.fontSizeChange = this.fontSizeChange.bind(this)\n\n\n\n\n  }\n\n   changeImage(){\n     console.log(\"Clicked\");\n    this.setState(currentState=>{\n      return{\n      counter:currentState.counter + 1,\n      randomImage:currentState.memeImages[currentState.counter].url\n    }\n    }\n  )\n  }\n\n\n\n  componentWillMount(){\n    fetch(\"https://api.imgflip.com/get_memes\")\n    .then(response => response.json())\n    .then(response=>{\n      const {data} = response\n      this.setState({\n        memeImages:data.memes\n      })\n    })\n  }\n\n  addTextBox(){\n    return(\n      <input className=\"inputBox\" type=\"text\" placeholder=\"Top Text\" />\n    )\n  }\n\n  dropImage(event){\n    const id= event.dataTransfer.getData(\"id\")\n    console.log(id);\n    const boxStyle = {\n    position:\"absolute\",\n    left: event.clientX,\n    top: event.clientY,\n    fontSize: this.state.fontSize\n  };\n    if(id==-1){\n      console.log(id);\n      event.preventDefault()\n      const box={\n        boxID:this.state.inputBoxID,\n        style:boxStyle\n      }\n      this.setState(function(state){\n       return {\n         inputBoxes: state.inputBoxes.concat(box),\n         inputBoxID: state.inputBoxID + 1\n       };\n    })\n\n  }\n  else{\n    const index = this.state.inputBoxes.findIndex(element=>element.boxID==id)\n    let newBoxArray = [...this.state.inputBoxes]\n    newBoxArray[index].style = boxStyle\n    this.setState(function(state){\n     return {\n       inputBoxes: newBoxArray\n     };\n  })\n  }\n}\n\n  dragOverImage(event){\n    event.preventDefault()\n  }\n\n\n  dragStart(event,id){\n    event.dataTransfer.setData(\"id\",id)\n  }\n\n  fontSizeChange(event){\n    console.log(event.target.value);\n    this.setState(function(state){\n      return{\n        fontSize:event.target.value\n      }\n    })\n  }\n\n\n\n  render(){\n    console.log(this.state.inputBoxes);\n    const inputboxes=this.state.inputBoxes.map((item)=>{\n      const styleClass={\n        position:item.style.position,\n        left: item.style.left,\n        top: item.style.right,\n        fontSize: this.state.fontSize\n      }\n      return <input key={item.BoxID} className=\"memeInputBox\" style={item.style} type=\"text\" placeholder=\"Drag me\" draggable onDragStart={(e)=>{this.dragStart(e,item.boxID)}} />\n    });\n\n      return(\n        <div>\n        <div className=\"inputBoxContainer\">\n        <input className=\"inputBox\" type=\"text\" placeholder=\"Drag me\" draggable onDragStart={(e)=>{this.dragStart(e,-1)}} readOnly />\n        <button className=\"generateButton\">Gen</button>\n      <input className=\"fontSizeInputBox\" list=\"fontSize\" name=\"fontSize\" type=\"number\" onChange={this.fontSizeChange}/>\n      <datalist id=\"fontSize\">\n      <option value=\"12\" />\n      <option value=\"14\" />\n      <option value=\"18\" />\n      <option value=\"24\" />\n      <option value=\"28\" />\n      <option value=\"32\" />\n  </datalist>\n        </div>\n        <img className=\"memeImage\" src={this.state.randomImage} onDragOver={this.dragOverImage} onDrop={this.dropImage}/>\n        <button onClick={this.changeImage}> Next Image</button>\n        {inputboxes}\n        </div>\n      )\n  }\n}\n\nexport default InputArea\n"]},"metadata":{},"sourceType":"module"}